project STM32F407Disco is

   type Loader_Type is ("ROM", "RAM");
   Loader : Loader_Type := external ("LOADER", "ROM");

   type Build_Type is ("Debug", "Production");
   Build   : Build_Type := external ("BUILD", "Debug");

   for Target use "arm-eabi";
   for Languages use ("C", "Asm");

   for Library_Name use "gnat_crt0";
   for Object_Dir use "obj";
   for Library_Dir use "lib";

   for Source_Dirs use
     ("stm32f407",
      "Core/Inc",
      "Core/Src",
      "Drivers/CMSIS/Device/ST/STM32F4xx/Include",
      "Drivers/CMSIS/Include",
      "Drivers/STM32F4xx_HAL_Driver/Inc",
      "Drivers/STM32F4xx_HAL_Driver/Inc/Legacy",
      "Drivers/STM32F4xx_HAL_Driver/Src",

      --"generated/Inc",
      --"generated/Src",
      --"generated/STM32F4xx_HAL_Driver/Inc",
     -- "generated/STM32F4xx_HAL_Driver/Src",
      --"generated/CMSIS/Include",
      --"generated/CMSIS/Device",
      --"generated/CMSIS/Device/ST/STM32F4xx/Include",
      "gcov_c"
       );

   Common_Switches :=
     ("-mlittle-endian", "-mfloat-abi=hard",
      "-mcpu=cortex-m4", "-mfpu=fpv4-sp-d16",
      "-mthumb");

   Target_Switches := ("-ffunction-sections", "-fdata-sections",
         "-DSTM32F407xx", "-DUSE_HAL_DRIVER", "-g3");

   package Compiler is

      for Switches ("C") use Common_Switches & Target_Switches;

      case Build is
         when "Debug" =>
            for Switches ("C") use Compiler'Switches ("C") &
              ("-g", "-O0");
            for Switches ("Asm") use Compiler'Switches ("Asm") &
               ("-g");
         when "Production" =>
            for Switches ("C") use Compiler'Switches ("C") &
              ("-O2");
      end case;
   end Compiler;

   Linker_Switches := Common_Switches &
     ("-Wl,-T," & Project'Project_Dir & "ld/STM32F407VGTX_RAM.ld","-Wl,-Map=\'Example_Gcov.txt\'",
      "-L" & Project'Project_Dir & "lib",
      "-Wl,--gc-sections", "-nostartfiles",
      "-lc", "-Wl,--whole-archive", "-lada_crt", "-Wl,--no-whole-archive",
      "-Wl,-z,muldefs");

end STM32F407Disco;
